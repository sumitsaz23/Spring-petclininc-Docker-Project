name: "CI build with Maven & docker build"

on:
#  push:
#    branches:
#    - master
  workflow_dispatch:

jobs:
  Build:
    name: "build the jar"
    runs-on: self-hosted
    steps:
      - name: check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: build with maven
        run: mvn clean install -f pom.xml

     # - name: Build and analyze
      #  env:
       #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #  SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
       # run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=spring-petclinic-docker-project -Dsonar.projectName='spring-petclinic-docker-project'

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}