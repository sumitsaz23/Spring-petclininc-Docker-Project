name: "CI build with Maven & docker build"

on:
#  push:
#    branches:
#    - master
  workflow_dispatch:

jobs:
  Build:
    name: "build the jar"
    runs-on: self-hosted
    steps:
      - name: check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: build with maven
        run: mvn clean install -f pom.xml

      # - name: Build and analyze
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      #   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=spring-petclinic-docker-project -Dsonar.projectName='spring-petclinic-docker-project'
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: java-app
          path: target/*.jar 


  Securitycheck:
    name: Sonarqube check
    runs-on: self-hosted
    needs: Build
    steps:   
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  Check_Quality_Gate_status:
    name: quality gate
    runs-on: self-hosted
    needs: Securitycheck
    steps:
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  
  Docker_Build:
    name: Build Docker image
    runs-on: self-hosted
    needs: Build
    env:
      app_name: "springpetclinic"
    steps:
      
    - name: Build Docker image  
      run: docker build -t "${{env.app_name}}:${{ github.sha }}" .
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Trivy scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: "${{env.app_name}}:${{ github.sha }}"
        format: 'table'
        
    - name: Push to Docker Hub
      run: |
        docker tag "${{env.app_name}}:${{ github.sha }}" "${{vars.DOCKERHUB_USERNAME}}/${{env.app_name}}":${{github.ref_name}}
        docker push "${{vars.DOCKERHUB_USERNAME}}/${{env.app_name}}":${{github.ref_name}}
